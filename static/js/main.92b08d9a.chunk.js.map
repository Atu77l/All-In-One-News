{"version":3,"sources":["config.js","Headlines.js","News.js","SearchNews.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","topHeadlinesURL","sourcesURL","everythingURL","countryID","apiKey","sources","search","Headlines","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","articles","classes","react_default","a","createElement","className","root","GridList_default","cellHeight","gridList","GridListTile_default","key","cols","style","height","ListSubheader_default","component","map","article","urlToImage","src","alt","title","GridListTileBar_default","subtitle","source","name","actionIcon","IconButton_default","icon","href","url","Info_default","_this2","axios","get","URL","then","response","data","setState","Component","withStyles","theme","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","width","color","News","_this$state","reloadSource","console","log","SearchNews","reloadSearch","App","sourceValue","searchValue","handleChangeSource","bind","assertThisInitialized","handleChangeSearch","AppBar_default","position","Toolbar_default","Typography_default","variant","noWrap","grow","searchIcon","Search_default","InputBase_default","placeholder","inputRoot","input","inputInput","value","onChange","i","id","src_SearchNews","src_Headlines","src_News","event","target","flexGrow","menuButton","marginLeft","marginRight","defineProperty","breakpoints","up","borderRadius","shape","fade","common","white","&:hover","spacing","unit","pointerEvents","alignItems","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","&:focus","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.92b08d9a.chunk.js","sourcesContent":["module.exports = {\r\n  topHeadlinesURL: 'https://newsapi.org/v2/top-headlines?',\r\n  sourcesURL: 'https://newsapi.org/v2/sources?',\r\n  everythingURL: 'https://newsapi.org/v2/everything?',\r\n  countryID: 'country=id&',\r\n  apiKey: 'apiKey=558ac6d1fecc4e5a8664f2f2e8761713',\r\n  sources: '&sources=',\r\n  search: '&q='\r\n}","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport URL from './config'\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\nclass Headlines extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      articles: []\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let { articles } = this.state\r\n    const { classes } = this.props\r\n    return (\r\n      <div className={classes.root}>\r\n        <GridList cellHeight={180} className={classes.gridList}>\r\n          <GridListTile key=\"Subheader\" cols={2} style={{ height: 'auto' }}>\r\n            <ListSubheader component=\"div\">Top Headlines</ListSubheader>\r\n          </GridListTile>\r\n          {articles.map(article => (\r\n            <GridListTile key={article.urlToImage}>\r\n              <img src={article.urlToImage} alt={article.title} />\r\n              <GridListTileBar\r\n                title={article.title}\r\n                subtitle={<span>by: {article.source.name}</span>}\r\n                actionIcon={\r\n                  <IconButton className={classes.icon} href={article.url}>\r\n                    <InfoIcon />\r\n                  </IconButton>\r\n                }\r\n              />\r\n            </GridListTile>\r\n          ))}\r\n        </GridList>\r\n      </div>\r\n    );\r\n  }\r\n  componentDidMount() {\r\n    axios\r\n      .get(URL.topHeadlinesURL + URL.countryID + URL.apiKey)\r\n      .then(response => {\r\n        let { data } = response\r\n        this.setState({\r\n          articles: data.articles\r\n        })\r\n      })\r\n  }\r\n}\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  gridList: {\r\n    width: 1100,\r\n    height: 900,\r\n  },\r\n  icon: {\r\n    color: 'rgba(255, 255, 255, 0.54)',\r\n  },\r\n});\r\n\r\nHeadlines.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Headlines);\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport URL from './config'\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\nclass News extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      articles: [],\r\n      source: props.source\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let { articles, source } = this.state\r\n    const { classes } = this.props\r\n\r\n    if (source !== this.props.source) this.reloadSource()\r\n    return (\r\n      <div className={classes.root}>\r\n        <GridList cellHeight={180} className={classes.gridList}>\r\n          <GridListTile key=\"Subheader\" cols={2} style={{ height: 'auto' }}>\r\n            <ListSubheader component=\"div\">Berita dari {this.props.source}</ListSubheader>\r\n          </GridListTile>\r\n          {articles.map(article => (\r\n            <GridListTile key={article.urlToImage}>\r\n              <img src={article.urlToImage} alt={article.title} />\r\n              <GridListTileBar\r\n                title={article.title}\r\n                subtitle={<span>by: {article.source.name}</span>}\r\n                actionIcon={\r\n                  <IconButton className={classes.icon} href={article.url}>\r\n                    <InfoIcon />\r\n                  </IconButton>\r\n                }\r\n              />\r\n            </GridListTile>\r\n          ))}\r\n        </GridList>\r\n      </div>\r\n    );\r\n  }\r\n  componentDidMount() {\r\n    this.reloadSource()\r\n  }\r\n\r\n  reloadSource() {\r\n    axios\r\n      .get(URL.topHeadlinesURL + URL.apiKey + URL.sources + this.props.source)\r\n      .then(response => {\r\n        console.log(response.data)\r\n        let { data } = response\r\n        this.setState({\r\n          articles: data.articles\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  gridList: {\r\n    width: 1100,\r\n    height: 900,\r\n  },\r\n  icon: {\r\n    color: 'rgba(255, 255, 255, 0.54)',\r\n  },\r\n});\r\n\r\nNews.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(News);\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport URL from './config'\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\nclass SearchNews extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      articles: [],\r\n      search: props.search\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let { articles, search } = this.state\r\n    const { classes } = this.props\r\n\r\n    if (search !== this.props.search) this.reloadSearch()\r\n    return (\r\n      <div className={classes.root}>\r\n        <GridList cellHeight={180} className={classes.gridList}>\r\n          <GridListTile key=\"Subheader\" cols={2} style={{ height: 'auto' }}>\r\n            <ListSubheader component=\"div\">Mencari berita {this.props.search}</ListSubheader>\r\n          </GridListTile>\r\n          {articles.map(article => (\r\n            <GridListTile key={article.urlToImage}>\r\n              <img src={article.urlToImage} alt={article.title} />\r\n              <GridListTileBar\r\n                title={article.title}\r\n                subtitle={<span>by: {article.source.name}</span>}\r\n                actionIcon={\r\n                  <IconButton className={classes.icon} href={article.url}>\r\n                    <InfoIcon />\r\n                  </IconButton>\r\n                }\r\n              />\r\n            </GridListTile>\r\n          ))}\r\n        </GridList>\r\n      </div>\r\n    );\r\n  }\r\n  componentDidMount() {\r\n    this.reloadSearch()\r\n  }\r\n\r\n  reloadSearch() {\r\n    axios\r\n      .get(URL.everythingURL + URL.apiKey + URL.search + this.props.search)\r\n      .then(response => {\r\n        console.log(response.data)\r\n        let { data } = response\r\n        this.setState({\r\n          articles: data.articles\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  gridList: {\r\n    width: 1100,\r\n    height: 900,\r\n  },\r\n  icon: {\r\n    color: 'rgba(255, 255, 255, 0.54)',\r\n  },\r\n});\r\n\r\nSearchNews.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SearchNews);\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios'\r\nimport URL from './config'\r\nimport './App.css';\r\n\r\nimport Headlines from './Headlines'\r\nimport News from './News'\r\nimport SearchNews from './SearchNews';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade } from '@material-ui/core/styles/colorManipulator';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      sources: [],\r\n      sourceValue: 'headlines',\r\n      searchValue: ''\r\n    };\r\n    this.handleChangeSource = this.handleChangeSource.bind(this);\r\n    this.handleChangeSearch = this.handleChangeSearch.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(URL.sourcesURL + URL.apiKey)\r\n      .then(response => {\r\n        console.log(response.data)\r\n        let { data } = response\r\n        this.setState({\r\n          sources: data.sources,\r\n        })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    let { sources, sourceValue, searchValue } = this.state\r\n    const { classes } = this.props;\r\n    return (\r\n\r\n      <div className=\"root\">\r\n\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\r\n              All In One !!! News\r\n            </Typography>\r\n            <div className={classes.grow} />\r\n            <div className={classes.search}>\r\n              <div className={classes.searchIcon}>\r\n                <SearchIcon />\r\n              </div>\r\n              <InputBase\r\n                placeholder=\"Search...\"\r\n                classes={{\r\n                  root: classes.inputRoot,\r\n                  input: classes.inputInput,\r\n                }}\r\n                value={searchValue} onChange={this.handleChangeSearch}\r\n              />\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\r\n          All Channel Present Here..\r\n        </Typography>\r\n        <select value={this.state.sourceValue} onChange={this.handleChangeSource}>\r\n          <option value=\"headlines\">Top Headlines</option>\r\n          {sources.map((source, i) => {\r\n            return (\r\n              <option key={i} value={source.id}>\r\n                {source.name}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n        {\r\n          this.state.searchValue !== '' ? <SearchNews search={searchValue} /> : this.state.sourceValue === 'headlines' ? <Headlines /> : <News source={sourceValue} />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleChangeSource(event) {\r\n    this.setState({ sourceValue: event.target.value });\r\n    console.log(this.state.sourceValue);\r\n  }\r\n  handleChangeSearch(event) {\r\n    this.setState({ searchValue: event.target.value });\r\n    console.log(this.state.searchValue);\r\n  }\r\n}\r\n\r\nApp.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing.unit,\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing.unit * 9,\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n    width: '100%',\r\n  },\r\n  inputInput: {\r\n    paddingTop: theme.spacing.unit,\r\n    paddingRight: theme.spacing.unit,\r\n    paddingBottom: theme.spacing.unit,\r\n    paddingLeft: theme.spacing.unit * 10,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: 120,\r\n      '&:focus': {\r\n        width: 200,\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport default withStyles(styles)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}